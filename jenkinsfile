pipeline {
    agent { label 'slave1' }

    environment {
        DOCKER_IMAGE = "java-calculator"
        DOCKER_TAG   = "latest"
        DOCKER_HUB_USER = "kotannithin"
    }

    stages {
        
        stage('"Build with Maven"') {
            steps {
                bat 'mvn clean package'
                echo 'package is done'
            }
        }

      /* stage('Build Docker Image') {
            steps {
                script {
                    bat "docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} ."
                }
            }
        }

        stage('Push Docker Image') {
            when {
                expression { return env.DOCKER_HUB_USER != null }
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    
                    //login credentials
                    bat 'echo %DOCKER_PASS% | docker login -u %DOCKER_USER% --password-stdin'
                    
                    //tag with proper image
                    bat "docker tag %DOCKER_IMAGE%:%DOCKER_TAG% %DOCKER_USER%/%DOCKER_IMAGE%:%DOCKER_TAG%"
                    
                    // push the image
                    bat "docker push %DOCKER_USER%/%DOCKER_IMAGE%:%DOCKER_TAG%"
                }
            }
        }


            stage('Deploy to Kubernetes') {
        steps {
            script {
                // Update the deployment with the new image
                bat """
                kubectl set image deployment/java-calculator-deployment \
                java-calculator=${DOCKER_HUB_USER}/${DOCKER_IMAGE}:${DOCKER_TAG} --record
                kubectl rollout status deployment/java-calculator-deployment
                """
            }
        }
    }*/

    }

    post {
        success {
            echo "✅ Build and Docker image created successfully.."
        }
        failure {
            echo "❌ Build failed. Check logs."
        }
    }
}
